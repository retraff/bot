import os
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏ ID –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏–∑ .env
load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")
MANAGER_CHAT_ID = int(os.getenv("8110796568"))  # —Å—é–¥–∞ –≤—Å—Ç–∞–≤–ª—è–µ–º chat_id –º–µ–Ω–µ–¥–∂–µ—Ä–∞

if not BOT_TOKEN or not MANAGER_CHAT_ID:
    raise ValueError("–ù–µ –Ω–∞–π–¥–µ–Ω BOT_TOKEN –∏–ª–∏ MANAGER_CHAT_ID –≤ .env")

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–ø–∏—Å–∞–ª –∏–º—è
user_states = {}

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message_handler(commands=["start"])
async def start(message: types.Message):
    await message.reply(
        "–ü—Ä–∏–≤–µ—Ç! üëã –¢—ã –ø–æ–ø–∞–ª —Ç—É–¥–∞, –≥–¥–µ —Ç—Ä—É–¥ —Ä–µ–∞–ª—å–Ω–æ —Ü–µ–Ω—è—Ç –∏ –æ–ø–ª–∞—á–∏–≤–∞—é—Ç –¥–æ—Å—Ç–æ–π–Ω–æ.\n"
        "–ù–∞–ø–∏—à–∏ —Å–≤–æ—ë –∏–º—è ‚Äî –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å —Ç–æ–±–æ–π —Å 15:00 –¥–æ 21:00."
    )
    # –û—Ç–º–µ—á–∞–µ–º, —á—Ç–æ –∂–¥–µ–º –∏–º—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_states[message.from_user.id] = "waiting_name"

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π (–∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
@dp.message_handler()
async def handle_name(message: types.Message):
    user_id = message.from_user.id

    if user_states.get(user_id) == "waiting_name":
        name = message.text.strip()
        username = message.from_user.username or "–ù–µ —É–∫–∞–∑–∞–Ω"

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä—É
        await bot.send_message(
            MANAGER_CHAT_ID,
            f"–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:\n–ò–º—è: {name}\nUsername: @{username}"
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        await message.reply(f"–û—Ç–ª–∏—á–Ω–æ, {name}! üöÄ –ñ–¥–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.")

        # –£–±–∏—Ä–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è
        user_states.pop(user_id)
    else:
        await message.reply("–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –Ω–∞–∂–º–∏ /start")

if __name__ == "__main__":
    asyncio.run(dp.start_polling())
